{"version":3,"sources":["pyra.riv","pyra.js","App.js","index.js"],"names":["Example","STATE_MACHINE_NAME","useRive","src","PyraRiv","stateMachines","autoplay","fitCanvasToArtboardHeight","RiveComponent","rive","levelInput","useStateMachineInput","useState","levelValue","setlevelValue","useEffect","value","className","layout","fit","alignment","type","min","max","step","onChange","e","target","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"gLAAe,MAA0B,iC,OCmD1BA,MA/Cf,WACE,IAAMC,EAAqB,YAG3B,EAAgCC,kBAC9B,CACEC,IAAKC,EACLC,cAAeJ,EACfK,UAAU,GAEZ,CACEC,2BAA2B,IAPvBC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,KAWjBC,EAAaC,+BAAqBF,EAAMR,EAb3B,SAenB,EAAoCW,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAQA,OANAC,qBAAU,WACJL,IACFA,EAAWM,MAAQH,KAEpB,CAACA,EAAYH,IAGd,sBAAKO,UAAU,MAAf,UACE,yDACA,gDACA,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,cAACT,EAAD,CAAeU,OAAQ,CAAEC,IAAK,QAASC,UAAW,gBAGtD,uBACEC,KAAK,QACLC,IAAI,IACJC,IAAI,MACJP,MAAOH,EACPW,KAAK,IACLC,SAAU,SAACC,GAAD,OAAOZ,EAAcY,EAAEC,OAAOX,UAE1C,8CAAiBH,SC3CR,SAASe,IACtB,OACE,sBAAKX,UAAU,MAAf,UACE,uCACA,yEACA,cAAC,EAAD,OCHN,IAAMY,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACL,EAAD,MAEFC,I","file":"static/js/main.8137a7e0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pyra.f6c7da85.riv\";","import { useEffect, useState } from \"react\";\r\nimport { useRive, useStateMachineInput } from \"rive-react\";\r\nimport PyraRiv from \"./pyra.riv\";\r\n\r\nfunction Example() {\r\n  const STATE_MACHINE_NAME = \"animation\";\r\n  const INPUT_NAME = \"input\";\r\n\r\n  const { RiveComponent, rive } = useRive(\r\n    {\r\n      src: PyraRiv,\r\n      stateMachines: STATE_MACHINE_NAME,\r\n      autoplay: true\r\n    },\r\n    {\r\n      fitCanvasToArtboardHeight: true\r\n    }\r\n  );\r\n\r\n  const levelInput = useStateMachineInput(rive, STATE_MACHINE_NAME, INPUT_NAME);\r\n\r\n  const [levelValue, setlevelValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (levelInput) {\r\n      levelInput.value = levelValue;\r\n    }\r\n  }, [levelValue, levelInput]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Runtime Funtime - React</h1>\r\n      <h2>Use the slider</h2>\r\n      <div className=\"flex\">\r\n        <div className=\"rive-container\">\r\n          <RiveComponent layout={{ fit: \"cover\", alignment: \"center\" }} />\r\n        </div>\r\n      </div>\r\n      <input\r\n        type=\"range\"\r\n        min=\"0\"\r\n        max=\"100\"\r\n        value={levelValue}\r\n        step=\"1\"\r\n        onChange={(e) => setlevelValue(e.target.value)}\r\n      />\r\n      <p>level input: {levelValue}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Example;\r\n","import \"./styles.css\";\nimport Pyra from \"./pyra\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Hello</h1>\n      <h2>Start editing to see some magic happen!</h2>\n      <Pyra />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}